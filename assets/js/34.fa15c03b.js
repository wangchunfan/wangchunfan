(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{358:function(e,n,s){"use strict";s.r(n);var a=s(0),t=Object(a.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[e._v("#")]),e._v(" 题目描述")]),e._v(" "),s("p",[e._v("输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。")]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/%E5%89%91%E6%8C%87offer/24.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97.png",alt:"二叉搜索树"}})]),e._v(" "),s("h2",{attrs:{id:"解题思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[e._v("#")]),e._v(" 解题思路")]),e._v(" "),s("h3",{attrs:{id:"解法1：递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解法1：递归"}},[e._v("#")]),e._v(" 解法1：递归")]),e._v(" "),s("ul",[s("li",[e._v("后序遍历 3 4 9 12 16 15 10")]),e._v(" "),s("li",[e._v("观察：")]),e._v(" "),s("li",[e._v("最后一个节点10为根节点，比10大的为左子树节点 4 3 9 ；比10小的为右子树节点 12 16 15")]),e._v(" "),s("li",[e._v("继续处理左子树节点，9为根，3为左，4为右。。直到子树只有一个节点为止")]),e._v(" "),s("li",[e._v("找一个错误的遍历 3 6 4 5 ，根为5 ，左为3，右为 6 4，但是4比5小，错误。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public class Solution {\n    public boolean VerifySquenceOfBST(int[] sequence) {\n        if (sequence == null || sequence.length == 0)\n            return false;\n        return VerifySquence(sequence, 0, sequence.length - 1);\n    }\n\n    private boolean VerifySquence(int[] sequence, int start, int end) {\n        if (start >= end)\n            return true;\n        int middle = end;   //middle 是左右子树的分界点，并且是右子树的开端\n        for (int i = start; i < end; i++) {\n            if (sequence[i] > sequence[end]) {\n                middle = i;\n                break;\n            }\n        }\n        for (int i = middle + 1; i < end; i++) {\n            if (sequence[i] < sequence[end])\n                return false;\n        }\n        return VerifySquence(sequence, start, middle - 1) && VerifySquence(sequence, middle, end - 1);\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);